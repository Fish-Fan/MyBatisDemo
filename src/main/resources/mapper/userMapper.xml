<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
 -->
<mapper namespace="com.fanyank.mapper.UserMapper">
    <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复
    使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
    resultType="me.gacl.domain.User"就表示将查询结果封装成一个User类的对象返回
    User类就是users表所对应的实体类
    -->
    <!--
        根据id查询得到一个user对象
     -->

    <!--自定义映射-->
    <resultMap id="userMap" type="user">
        <!--id为表的主键-->
        <id column="id" property="id" javaType="integer" jdbcType="INTEGER"/>
        <!--column为数据库中的列名,property为POJO中对应的属性名-->
        <result column="username" property="username" typeHandler="com.fanyank.util.MyStringTypeHandler"/>
        <result column="password" property="password" typeHandler="com.fanyank.util.MyStringTypeHandler"/>
    </resultMap>

    <!--定义了resultMap之后就不能再定义resultType了-->
    <select id="getUser" parameterType="int" resultMap="userMap">
        select id,username,password from t_user where id=#{id}
    </select>

    <!--插入数据返回主键-->
    <insert id="saveUser" parameterType="user" useGeneratedKeys="true" keyProperty="id">
        insert into t_user(username,password) values(#{username},#{password})
    </insert>
</mapper>